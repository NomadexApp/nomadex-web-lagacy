#pragma version 10

// This TEAL was generated by TEALScript v0.80.1
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its respective branch will be "NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch call_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_UpdateApplication NOT_IMPLEMENTED create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED

NOT_IMPLEMENTED:
	err

// set_ratio(): void
set_ratio:
	proto 0 0

	// src/contracts/arc200_swap.algo.ts:19
	// this.ratio.value = wideRatio([this.get_balance(), SCALE], [this.get_arc200_balance()])
	byte 0x726174696f // "ratio"
	callsub get_balance
	int 100000000
	mulw
	int 0
	callsub get_arc200_balance
	divmodw
	pop
	pop
	swap
	!
	assert
	app_global_put
	retsub

// createApplication()void
abi_route_createApplication:
	// execute createApplication()void
	callsub createApplication
	int 1
	return

// createApplication(): void
createApplication:
	proto 0 0

	// src/contracts/arc200_swap.algo.ts:40
	// this.admin.value = this.txn.sender
	byte 0x61646d696e // "admin"
	txn Sender
	app_global_put

	// src/contracts/arc200_swap.algo.ts:41
	// this.arc200_token.value = Application.fromID(6779767)
	byte 0x6172633230305f746f6b656e // "arc200_token"
	int 6779767
	app_global_put

	// src/contracts/arc200_swap.algo.ts:42
	// this.fee.value = 50
	byte 0x666565 // "fee"
	int 50
	app_global_put

	// src/contracts/arc200_swap.algo.ts:43
	// this.initialized.value = false
	byte 0x696e697469616c697a6564 // "initialized"
	int 0
	byte 0x00
	int 0
	uncover 2
	setbit
	app_global_put
	retsub

// updateApplication()void
abi_route_updateApplication:
	// execute updateApplication()void
	callsub updateApplication
	int 1
	return

// updateApplication(): void
updateApplication:
	proto 0 0

	// src/contracts/arc200_swap.algo.ts:48
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert
	retsub

// tokens_to_mint_intial(a_amount: uint64, b_amount: uint64): uint64
//
// **********************************************
tokens_to_mint_intial:
	proto 2 1

	// src/contracts/arc200_swap.algo.ts:54
	// return sqrt(a_amount * b_amount);
	frame_dig -1 // a_amount: uint64
	frame_dig -2 // b_amount: uint64
	*
	sqrt
	retsub

// tokens_to_mint(issued: uint64, a_supply: uint64, b_supply: uint64, a_amount: uint64, b_amount: uint64): uint64
tokens_to_mint:
	proto 5 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dupn 2

	// src/contracts/arc200_swap.algo.ts:64
	// a_ratio = wideRatio([a_amount, SCALE], [a_supply])
	frame_dig -4 // a_amount: uint64
	int 100000000
	mulw
	int 0
	frame_dig -2 // a_supply: uint64
	divmodw
	pop
	pop
	swap
	!
	assert
	frame_bury 0 // a_ratio: uint64

	// src/contracts/arc200_swap.algo.ts:65
	// b_ratio = wideRatio([b_amount, SCALE], [b_supply])
	frame_dig -5 // b_amount: uint64
	int 100000000
	mulw
	int 0
	frame_dig -3 // b_supply: uint64
	divmodw
	pop
	pop
	swap
	!
	assert
	frame_bury 1 // b_ratio: uint64

	// src/contracts/arc200_swap.algo.ts:67
	// ratio = a_ratio < b_ratio ? a_ratio : b_ratio
	frame_dig 0 // a_ratio: uint64
	frame_dig 1 // b_ratio: uint64
	<
	bz ternary1_false
	frame_dig 0 // a_ratio: uint64
	b ternary1_end

ternary1_false:
	frame_dig 1 // b_ratio: uint64

ternary1_end:
	frame_bury 2 // ratio: uint64

	// src/contracts/arc200_swap.algo.ts:69
	// return wideRatio([ratio, issued], [SCALE]);
	frame_dig 2 // ratio: uint64
	frame_dig -1 // issued: uint64
	mulw
	int 0
	int 100000000
	divmodw
	pop
	pop
	swap
	!
	assert

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 2
	retsub

// compute_token_withdraw_amount(issued: uint64, supply: uint64, amount: uint64): uint64
compute_token_withdraw_amount:
	proto 3 1

	// src/contracts/arc200_swap.algo.ts:73
	// return wideRatio([supply, amount], [issued]);
	frame_dig -2 // supply: uint64
	frame_dig -3 // amount: uint64
	mulw
	int 0
	frame_dig -1 // issued: uint64
	divmodw
	pop
	pop
	swap
	!
	assert
	retsub

// compute_out_tokens(in_amount: uint64, in_supply: uint64, out_supply: uint64, fee: uint64): uint64
compute_out_tokens:
	proto 4 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dupn 2

	// src/contracts/arc200_swap.algo.ts:77
	// factor = SCALE - fee
	int 100000000
	frame_dig -4 // fee: uint64
	-
	frame_bury 0 // factor: uint64

	// src/contracts/arc200_swap.algo.ts:79
	// numerator = <uint<256>>in_amount * <uint<256>>out_supply * <uint<256>>factor
	frame_dig -1 // in_amount: uint64
	itob
	frame_dig -3 // out_supply: uint64
	itob
	b*
	frame_dig 0 // factor: uint64
	itob
	b*
	frame_bury 1 // numerator: unsafe uint256

	// src/contracts/arc200_swap.algo.ts:80
	// denominator = (<uint<256>>in_amount + <uint<256>>in_supply) * <uint<256>>SCALE
	frame_dig -1 // in_amount: uint64
	itob
	frame_dig -2 // in_supply: uint64
	itob
	b+
	byte 0x0000000000000000000000000000000000000000000000000000000005f5e100
	b*
	frame_bury 2 // denominator: unsafe uint256

	// src/contracts/arc200_swap.algo.ts:82
	// return <uint64>(numerator / denominator);
	frame_dig 1 // numerator: unsafe uint256
	frame_dig 2 // denominator: unsafe uint256
	b/
	dup
	bitlen
	int 64
	<=
	assert
	byte 0xFFFFFFFFFFFFFFFF
	b&
	dup
	len
	dup
	int 8
	-
	swap
	substring3
	btoi

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 2
	retsub

// compute_out_tokens_platform_fee(in_amount: uint64, in_supply: uint64, out_supply: uint64): uint64
compute_out_tokens_platform_fee:
	proto 3 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dup

	// src/contracts/arc200_swap.algo.ts:86
	// amount_without_fee = this.compute_out_tokens(in_amount, in_supply, out_supply, 0)
	int 0
	frame_dig -3 // out_supply: uint64
	frame_dig -2 // in_supply: uint64
	frame_dig -1 // in_amount: uint64
	callsub compute_out_tokens
	frame_bury 0 // amount_without_fee: uint64

	// src/contracts/arc200_swap.algo.ts:87
	// amount_with_fee = this.compute_out_tokens(in_amount, in_supply, out_supply, this.fee.value)
	byte 0x666565 // "fee"
	app_global_get
	frame_dig -3 // out_supply: uint64
	frame_dig -2 // in_supply: uint64
	frame_dig -1 // in_amount: uint64
	callsub compute_out_tokens
	frame_bury 1 // amount_with_fee: uint64

	// src/contracts/arc200_swap.algo.ts:89
	// return ((amount_without_fee - amount_with_fee) * PLATFORM_FEE) / SCALE;
	frame_dig 0 // amount_without_fee: uint64
	frame_dig 1 // amount_with_fee: uint64
	-
	int 50000000
	*
	int 100000000
	/

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

// get_balance(): uint64
//
// **********************************************
get_balance:
	proto 0 1

	// src/contracts/arc200_swap.algo.ts:95
	// return this.app.address.balance - 1000_000;
	global CurrentApplicationAddress
	acct_params_get AcctBalance
	pop
	int 1000_000
	-
	retsub

// get_arc200_balance(): uint64
get_arc200_balance:
	proto 0 1

	// src/contracts/arc200_swap.algo.ts:99
	// return <uint64>sendMethodCall<[Address], uint<256>>({
	// 			sender: this.app.address,
	// 			name: 'arc200_balanceOf',
	// 			applicationID: this.arc200_token.value,
	// 			methodArgs: [this.app.address],
	// 			fee: 1000,
	// 		});
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "arc200_balanceOf(address)uint256"
	itxn_field ApplicationArgs

	// src/contracts/arc200_swap.algo.ts:100
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/arc200_swap.algo.ts:102
	// applicationID: this.arc200_token.value
	byte 0x6172633230305f746f6b656e // "arc200_token"
	app_global_get
	itxn_field ApplicationID

	// src/contracts/arc200_swap.algo.ts:103
	// methodArgs: [this.app.address]
	global CurrentApplicationAddress
	itxn_field ApplicationArgs

	// src/contracts/arc200_swap.algo.ts:104
	// fee: 1000
	int 1000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	int 1
	-
	itxnas Logs
	extract 4 0
	dup
	bitlen
	int 64
	<=
	assert
	extract 24 8
	btoi
	retsub

// transfer_to(to: Address, amount: uint64): boolean
transfer_to:
	proto 2 1

	// src/contracts/arc200_swap.algo.ts:109
	// sendPayment({
	// 			sender: this.app.address,
	// 			receiver: to,
	// 			amount: amount,
	// 			fee: 1000,
	// 		})
	itxn_begin
	int pay
	itxn_field TypeEnum

	// src/contracts/arc200_swap.algo.ts:110
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/arc200_swap.algo.ts:111
	// receiver: to
	frame_dig -1 // to: Address
	itxn_field Receiver

	// src/contracts/arc200_swap.algo.ts:112
	// amount: amount
	frame_dig -2 // amount: uint64
	itxn_field Amount

	// src/contracts/arc200_swap.algo.ts:113
	// fee: 1000
	int 1000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// src/contracts/arc200_swap.algo.ts:115
	// return true;
	int 1
	retsub

// asa_transfer_to(receiver: Account, asset: Asset, amount: uint64): boolean
asa_transfer_to:
	proto 3 1

	// src/contracts/arc200_swap.algo.ts:119
	// sendAssetTransfer({
	// 			assetReceiver: receiver,
	// 			xferAsset: asset,
	// 			assetAmount: amount,
	// 			fee: 1000,
	// 		})
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// src/contracts/arc200_swap.algo.ts:120
	// assetReceiver: receiver
	frame_dig -1 // receiver: Account
	itxn_field AssetReceiver

	// src/contracts/arc200_swap.algo.ts:121
	// xferAsset: asset
	frame_dig -2 // asset: Asset
	itxn_field XferAsset

	// src/contracts/arc200_swap.algo.ts:122
	// assetAmount: amount
	frame_dig -3 // amount: uint64
	itxn_field AssetAmount

	// src/contracts/arc200_swap.algo.ts:123
	// fee: 1000
	int 1000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// src/contracts/arc200_swap.algo.ts:125
	// return true;
	int 1
	retsub

// arc200_transfer_to(to: Address, amount: uint64): boolean
arc200_transfer_to:
	proto 2 1

	// src/contracts/arc200_swap.algo.ts:129
	// return sendMethodCall<[Address, uint<256>], boolean>({
	// 			sender: this.app.address,
	// 			name: 'arc200_transfer',
	// 			applicationID: this.arc200_token.value,
	// 			methodArgs: [to, <uint<256>>amount],
	// 			fee: 1000,
	// 		});
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "arc200_transfer(address,uint256)bool"
	itxn_field ApplicationArgs

	// src/contracts/arc200_swap.algo.ts:130
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/arc200_swap.algo.ts:132
	// applicationID: this.arc200_token.value
	byte 0x6172633230305f746f6b656e // "arc200_token"
	app_global_get
	itxn_field ApplicationID

	// src/contracts/arc200_swap.algo.ts:133
	// methodArgs: [to, <uint<256>>amount]
	frame_dig -1 // to: Address
	itxn_field ApplicationArgs
	frame_dig -2 // amount: uint64
	itob
	itxn_field ApplicationArgs

	// src/contracts/arc200_swap.algo.ts:134
	// fee: 1000
	int 1000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	int 1
	-
	itxnas Logs
	extract 4 0
	int 0
	getbit
	retsub

// arc200_tranfer_from(from: Address, to: Address, amount: uint64): boolean
arc200_tranfer_from:
	proto 3 1

	// src/contracts/arc200_swap.algo.ts:139
	// return sendMethodCall<[Address, Address, uint<256>], boolean>({
	// 			sender: this.app.address,
	// 			name: 'arc200_transferFrom',
	// 			applicationID: this.arc200_token.value,
	// 			methodArgs: [from, to, <uint<256>>amount],
	// 			fee: 1000,
	// 		});
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "arc200_transferFrom(address,address,uint256)bool"
	itxn_field ApplicationArgs

	// src/contracts/arc200_swap.algo.ts:140
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/arc200_swap.algo.ts:142
	// applicationID: this.arc200_token.value
	byte 0x6172633230305f746f6b656e // "arc200_token"
	app_global_get
	itxn_field ApplicationID

	// src/contracts/arc200_swap.algo.ts:143
	// methodArgs: [from, to, <uint<256>>amount]
	frame_dig -1 // from: Address
	itxn_field ApplicationArgs
	frame_dig -2 // to: Address
	itxn_field ApplicationArgs
	frame_dig -3 // amount: uint64
	itob
	itxn_field ApplicationArgs

	// src/contracts/arc200_swap.algo.ts:144
	// fee: 1000
	int 1000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	int 1
	-
	itxnas Logs
	extract 4 0
	int 0
	getbit
	retsub

// mint(pay,uint64,asset)void
abi_route_mint:
	// pool_token: asset
	txna ApplicationArgs 2
	btoi
	txnas Assets

	// arc200_amount: uint64
	txna ApplicationArgs 1
	btoi

	// pay_txn: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute mint(pay,uint64,asset)void
	callsub mint
	int 1
	return

// mint(pay_txn: PayTxn, arc200_amount: uint64, pool_token: Asset): void
//
// **********************************************
mint:
	proto 3 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// src/contracts/arc200_swap.algo.ts:151
	// verifyPayTxn(pay_txn, {
	// 			sender: this.txn.sender,
	// 			receiver: this.app.address,
	// 			amount: { greaterThan: 0 },
	// 		})
	// verify sender
	frame_dig -1 // pay_txn: PayTxn
	gtxns Sender
	txn Sender
	==
	assert

	// verify receiver
	frame_dig -1 // pay_txn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify amount
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:157
	// assert(arc200_amount > 0)
	frame_dig -2 // arc200_amount: uint64
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:158
	// assert(pool_token === this.pool_token.value)
	frame_dig -3 // pool_token: Asset
	byte 0x706f6f6c5f746f6b656e // "pool_token"
	app_global_get
	==
	assert

	// src/contracts/arc200_swap.algo.ts:159
	// assert(this.get_balance() > 0)
	callsub get_balance
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:161
	// this.arc200_tranfer_from(this.txn.sender, this.app.address, arc200_amount)
	frame_dig -2 // arc200_amount: uint64
	global CurrentApplicationAddress
	txn Sender
	callsub arc200_tranfer_from

	// src/contracts/arc200_swap.algo.ts:163
	// to_mint = <uint64>0
	int 0
	frame_bury 0 // to_mint: uint64

	// if0_condition
	// src/contracts/arc200_swap.algo.ts:165
	// !this.initialized.value
	byte 0x696e697469616c697a6564 // "initialized"
	app_global_get
	int 0
	getbit
	!
	bz if0_else

	// if0_consequent
	// src/contracts/arc200_swap.algo.ts:166
	// to_mint = this.tokens_to_mint_intial(pay_txn.amount, arc200_amount)
	frame_dig -2 // arc200_amount: uint64
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	callsub tokens_to_mint_intial
	frame_bury 0 // to_mint: uint64

	// src/contracts/arc200_swap.algo.ts:167
	// this.initialized.value = true
	byte 0x696e697469616c697a6564 // "initialized"
	int 1
	byte 0x00
	int 0
	uncover 2
	setbit
	app_global_put
	b if0_end

if0_else:
	// src/contracts/arc200_swap.algo.ts:169
	// to_mint = this.tokens_to_mint(
	// 				TOTAL_SUPPLY - this.app.address.assetBalance(this.pool_token.value),
	// 				this.get_balance() - pay_txn.amount,
	// 				this.get_arc200_balance() - arc200_amount,
	// 				pay_txn.amount,
	// 				arc200_amount
	// 			)
	frame_dig -2 // arc200_amount: uint64
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	callsub get_arc200_balance
	frame_dig -2 // arc200_amount: uint64
	-
	callsub get_balance
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	-
	int 10000000000000000
	global CurrentApplicationAddress
	byte 0x706f6f6c5f746f6b656e // "pool_token"
	app_global_get
	asset_holding_get AssetBalance
	pop
	-
	callsub tokens_to_mint
	frame_bury 0 // to_mint: uint64

if0_end:
	// src/contracts/arc200_swap.algo.ts:178
	// assert(to_mint > 0)
	frame_dig 0 // to_mint: uint64
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:180
	// this.asa_transfer_to(this.txn.sender, this.pool_token.value, to_mint)
	frame_dig 0 // to_mint: uint64
	byte 0x706f6f6c5f746f6b656e // "pool_token"
	app_global_get
	txn Sender
	callsub asa_transfer_to

	// src/contracts/arc200_swap.algo.ts:181
	// this.set_ratio()
	callsub set_ratio
	retsub

// burn(axfer)void
abi_route_burn:
	// lpt_pay_txn: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// execute burn(axfer)void
	callsub burn
	int 1
	return

// burn(lpt_pay_txn: AssetTransferTxn): void
burn:
	proto 1 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dupn 2

	// src/contracts/arc200_swap.algo.ts:185
	// verifyAssetTransferTxn(lpt_pay_txn, {
	// 			sender: this.txn.sender,
	// 			assetAmount: { greaterThan: 0 },
	// 			assetReceiver: this.app.address,
	// 			xferAsset: this.pool_token.value,
	// 		})
	// verify sender
	frame_dig -1 // lpt_pay_txn: AssetTransferTxn
	gtxns Sender
	txn Sender
	==
	assert

	// verify assetAmount
	frame_dig -1 // lpt_pay_txn: AssetTransferTxn
	gtxns AssetAmount
	int 0
	>
	assert

	// verify assetReceiver
	frame_dig -1 // lpt_pay_txn: AssetTransferTxn
	gtxns AssetReceiver
	global CurrentApplicationAddress
	==
	assert

	// verify xferAsset
	frame_dig -1 // lpt_pay_txn: AssetTransferTxn
	gtxns XferAsset
	byte 0x706f6f6c5f746f6b656e // "pool_token"
	app_global_get
	==
	assert

	// src/contracts/arc200_swap.algo.ts:192
	// assert(this.get_balance() > 0)
	callsub get_balance
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:194
	// issued = TOTAL_SUPPLY - (this.app.address.assetBalance(this.pool_token.value) - lpt_pay_txn.assetAmount)
	int 10000000000000000
	global CurrentApplicationAddress
	byte 0x706f6f6c5f746f6b656e // "pool_token"
	app_global_get
	asset_holding_get AssetBalance
	pop
	frame_dig -1 // lpt_pay_txn: AssetTransferTxn
	gtxns AssetAmount
	-
	-
	frame_bury 0 // issued: uint64

	// src/contracts/arc200_swap.algo.ts:196
	// withdraw_amount = this.compute_token_withdraw_amount(issued, this.get_balance(), lpt_pay_txn.assetAmount)
	frame_dig -1 // lpt_pay_txn: AssetTransferTxn
	gtxns AssetAmount
	callsub get_balance
	frame_dig 0 // issued: uint64
	callsub compute_token_withdraw_amount
	frame_bury 1 // withdraw_amount: uint64

	// src/contracts/arc200_swap.algo.ts:197
	// arc200_withdraw_amount = this.compute_token_withdraw_amount(
	// 			issued,
	// 			this.get_arc200_balance(),
	// 			lpt_pay_txn.assetAmount
	// 		)
	frame_dig -1 // lpt_pay_txn: AssetTransferTxn
	gtxns AssetAmount
	callsub get_arc200_balance
	frame_dig 0 // issued: uint64
	callsub compute_token_withdraw_amount
	frame_bury 2 // arc200_withdraw_amount: uint64

	// src/contracts/arc200_swap.algo.ts:203
	// this.transfer_to(this.txn.sender, withdraw_amount)
	frame_dig 1 // withdraw_amount: uint64
	txn Sender
	callsub transfer_to

	// src/contracts/arc200_swap.algo.ts:204
	// this.arc200_transfer_to(this.txn.sender, arc200_withdraw_amount)
	frame_dig 2 // arc200_withdraw_amount: uint64
	txn Sender
	callsub arc200_transfer_to

	// src/contracts/arc200_swap.algo.ts:206
	// this.set_ratio()
	callsub set_ratio
	retsub

// swap_to_arc200(pay,uint64)uint64
abi_route_swap_to_arc200:
	// The ABI return prefix
	byte 0x151f7c75

	// min_amount: uint64
	txna ApplicationArgs 1
	btoi

	// pay_txn: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute swap_to_arc200(pay,uint64)uint64
	callsub swap_to_arc200
	itob
	concat
	log
	int 1
	return

// swap_to_arc200(pay_txn: PayTxn, min_amount: uint64): uint64
//
// **********************************************
swap_to_arc200:
	proto 2 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dupn 3

	// src/contracts/arc200_swap.algo.ts:212
	// verifyPayTxn(pay_txn, {
	// 			sender: this.txn.sender,
	// 			receiver: this.app.address,
	// 			amount: { greaterThan: 0 },
	// 		})
	// verify sender
	frame_dig -1 // pay_txn: PayTxn
	gtxns Sender
	txn Sender
	==
	assert

	// verify receiver
	frame_dig -1 // pay_txn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify amount
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:218
	// arc200_balance = this.get_arc200_balance()
	callsub get_arc200_balance
	frame_bury 0 // arc200_balance: uint64

	// src/contracts/arc200_swap.algo.ts:219
	// balance = this.get_balance()
	callsub get_balance
	frame_bury 1 // balance: uint64

	// src/contracts/arc200_swap.algo.ts:221
	// assert(balance > 0)
	frame_dig 1 // balance: uint64
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:222
	// assert(arc200_balance > 0)
	frame_dig 0 // arc200_balance: uint64
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:224
	// to_swap = this.compute_out_tokens(pay_txn.amount, balance - pay_txn.amount, arc200_balance, this.fee.value)
	byte 0x666565 // "fee"
	app_global_get
	frame_dig 0 // arc200_balance: uint64
	frame_dig 1 // balance: uint64
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	-
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	callsub compute_out_tokens
	frame_bury 2 // to_swap: uint64

	// src/contracts/arc200_swap.algo.ts:226
	// platform_fee = this.compute_out_tokens_platform_fee(pay_txn.amount, balance - pay_txn.amount, arc200_balance)
	frame_dig 0 // arc200_balance: uint64
	frame_dig 1 // balance: uint64
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	-
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	callsub compute_out_tokens_platform_fee
	frame_bury 3 // platform_fee: uint64

	// src/contracts/arc200_swap.algo.ts:228
	// assert(to_swap > 0)
	frame_dig 2 // to_swap: uint64
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:229
	// assert(to_swap >= min_amount)
	frame_dig 2 // to_swap: uint64
	frame_dig -2 // min_amount: uint64
	>=
	assert

	// src/contracts/arc200_swap.algo.ts:231
	// this.arc200_transfer_to(this.txn.sender, to_swap)
	frame_dig 2 // to_swap: uint64
	txn Sender
	callsub arc200_transfer_to

	// src/contracts/arc200_swap.algo.ts:232
	// this.arc200_transfer_to(this.admin.value, platform_fee)
	frame_dig 3 // platform_fee: uint64
	byte 0x61646d696e // "admin"
	app_global_get
	callsub arc200_transfer_to

	// src/contracts/arc200_swap.algo.ts:233
	// this.set_ratio()
	callsub set_ratio

	// src/contracts/arc200_swap.algo.ts:235
	// this.Swap.log({
	// 			sender: this.txn.sender,
	// 			from_amount: pay_txn.amount,
	// 			to_amount: to_swap,
	// 			direction: 0,
	// 		})
	byte 0xae28f089 // Swap(address,uint64,uint64,uint8)
	txn Sender
	frame_dig -1 // pay_txn: PayTxn
	gtxns Amount
	itob
	concat
	frame_dig 2 // to_swap: uint64
	itob
	concat
	byte 0x00
	concat
	concat
	log

	// src/contracts/arc200_swap.algo.ts:242
	// return to_swap;
	frame_dig 2 // to_swap: uint64

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 3
	retsub

// swap_from_arc200(uint64,uint64)uint64
abi_route_swap_from_arc200:
	// The ABI return prefix
	byte 0x151f7c75

	// min_amount: uint64
	txna ApplicationArgs 2
	btoi

	// arc200_amount: uint64
	txna ApplicationArgs 1
	btoi

	// execute swap_from_arc200(uint64,uint64)uint64
	callsub swap_from_arc200
	itob
	concat
	log
	int 1
	return

// swap_from_arc200(arc200_amount: uint64, min_amount: uint64): uint64
swap_from_arc200:
	proto 2 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dupn 3

	// src/contracts/arc200_swap.algo.ts:246
	// this.arc200_tranfer_from(this.txn.sender, this.app.address, arc200_amount)
	frame_dig -1 // arc200_amount: uint64
	global CurrentApplicationAddress
	txn Sender
	callsub arc200_tranfer_from

	// src/contracts/arc200_swap.algo.ts:248
	// arc200_balance = this.get_arc200_balance()
	callsub get_arc200_balance
	frame_bury 0 // arc200_balance: uint64

	// src/contracts/arc200_swap.algo.ts:249
	// balance = this.get_balance()
	callsub get_balance
	frame_bury 1 // balance: uint64

	// src/contracts/arc200_swap.algo.ts:251
	// assert(balance > 0)
	frame_dig 1 // balance: uint64
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:252
	// assert(arc200_balance > 0)
	frame_dig 0 // arc200_balance: uint64
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:254
	// to_swap = this.compute_out_tokens(arc200_amount, arc200_balance - arc200_amount, balance, this.fee.value)
	byte 0x666565 // "fee"
	app_global_get
	frame_dig 1 // balance: uint64
	frame_dig 0 // arc200_balance: uint64
	frame_dig -1 // arc200_amount: uint64
	-
	frame_dig -1 // arc200_amount: uint64
	callsub compute_out_tokens
	frame_bury 2 // to_swap: uint64

	// src/contracts/arc200_swap.algo.ts:256
	// platform_fee = this.compute_out_tokens_platform_fee(arc200_amount, arc200_balance - arc200_amount, balance)
	frame_dig 1 // balance: uint64
	frame_dig 0 // arc200_balance: uint64
	frame_dig -1 // arc200_amount: uint64
	-
	frame_dig -1 // arc200_amount: uint64
	callsub compute_out_tokens_platform_fee
	frame_bury 3 // platform_fee: uint64

	// src/contracts/arc200_swap.algo.ts:258
	// assert(to_swap > 0)
	frame_dig 2 // to_swap: uint64
	int 0
	>
	assert

	// src/contracts/arc200_swap.algo.ts:259
	// assert(to_swap >= min_amount)
	frame_dig 2 // to_swap: uint64
	frame_dig -2 // min_amount: uint64
	>=
	assert

	// src/contracts/arc200_swap.algo.ts:261
	// this.transfer_to(this.txn.sender, to_swap)
	frame_dig 2 // to_swap: uint64
	txn Sender
	callsub transfer_to

	// src/contracts/arc200_swap.algo.ts:262
	// this.transfer_to(this.admin.value, platform_fee)
	frame_dig 3 // platform_fee: uint64
	byte 0x61646d696e // "admin"
	app_global_get
	callsub transfer_to

	// src/contracts/arc200_swap.algo.ts:263
	// this.set_ratio()
	callsub set_ratio

	// src/contracts/arc200_swap.algo.ts:265
	// this.Swap.log({
	// 			sender: this.txn.sender,
	// 			from_amount: arc200_amount,
	// 			to_amount: to_swap,
	// 			direction: 1,
	// 		})
	byte 0xae28f089 // Swap(address,uint64,uint64,uint8)
	txn Sender
	frame_dig -1 // arc200_amount: uint64
	itob
	concat
	frame_dig 2 // to_swap: uint64
	itob
	concat
	byte 0x01
	concat
	concat
	log

	// src/contracts/arc200_swap.algo.ts:272
	// return to_swap;
	frame_dig 2 // to_swap: uint64

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 3
	retsub

// create_pool_token(pay)uint64
abi_route_create_pool_token:
	// The ABI return prefix
	byte 0x151f7c75

	// seed: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute create_pool_token(pay)uint64
	callsub create_pool_token
	itob
	concat
	log
	int 1
	return

// create_pool_token(seed: PayTxn): Asset
//
// **********************************************
create_pool_token:
	proto 1 1

	// src/contracts/arc200_swap.algo.ts:278
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert

	// src/contracts/arc200_swap.algo.ts:279
	// verifyPayTxn(seed, { receiver: this.app.address, amount: { greaterThanEqualTo: 1010_000 } })
	// verify receiver
	frame_dig -1 // seed: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify amount
	frame_dig -1 // seed: PayTxn
	gtxns Amount
	int 1010_000
	>=
	assert

	// src/contracts/arc200_swap.algo.ts:280
	// assert(!this.pool_token.exists)
	txna Applications 0
	byte 0x706f6f6c5f746f6b656e // "pool_token"
	app_global_get_ex
	swap
	pop
	!
	assert

	// src/contracts/arc200_swap.algo.ts:282
	// this.pool_token.value = sendAssetCreation({
	// 			configAssetName: POOL_TOKEN_NAME,
	// 			configAssetUnitName: POOL_TOKEN_UNIT,
	// 			configAssetTotal: TOTAL_SUPPLY,
	// 			configAssetDecimals: 6,
	// 			configAssetManager: this.app.address,
	// 			configAssetReserve: this.app.address,
	// 			fee: 1000,
	// 		})
	byte 0x706f6f6c5f746f6b656e // "pool_token"
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// src/contracts/arc200_swap.algo.ts:283
	// configAssetName: POOL_TOKEN_NAME
	byte "VOI-VIA LPT"
	itxn_field ConfigAssetName

	// src/contracts/arc200_swap.algo.ts:284
	// configAssetUnitName: POOL_TOKEN_UNIT
	byte "LPT"
	itxn_field ConfigAssetUnitName

	// src/contracts/arc200_swap.algo.ts:285
	// configAssetTotal: TOTAL_SUPPLY
	int 10000000000000000
	itxn_field ConfigAssetTotal

	// src/contracts/arc200_swap.algo.ts:286
	// configAssetDecimals: 6
	int 6
	itxn_field ConfigAssetDecimals

	// src/contracts/arc200_swap.algo.ts:287
	// configAssetManager: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetManager

	// src/contracts/arc200_swap.algo.ts:288
	// configAssetReserve: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetReserve

	// src/contracts/arc200_swap.algo.ts:289
	// fee: 1000
	int 1000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	app_global_put

	// src/contracts/arc200_swap.algo.ts:292
	// return this.pool_token.value;
	byte 0x706f6f6c5f746f6b656e // "pool_token"
	app_global_get
	retsub

// register_online(byte[],byte[],byte[],uint64,uint64,uint64)void
abi_route_register_online:
	// vote_key_dilution: uint64
	txna ApplicationArgs 6
	btoi

	// vote_last: uint64
	txna ApplicationArgs 5
	btoi

	// vote_first: uint64
	txna ApplicationArgs 4
	btoi

	// vote_pk: byte[]
	txna ApplicationArgs 3
	extract 2 0

	// state_proof_pk: byte[]
	txna ApplicationArgs 2
	extract 2 0

	// selection_pk: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// execute register_online(byte[],byte[],byte[],uint64,uint64,uint64)void
	callsub register_online
	int 1
	return

// register_online(selection_pk: bytes, state_proof_pk: bytes, vote_pk: bytes, vote_first: uint64, vote_last: uint64, vote_key_dilution: uint64): void
register_online:
	proto 6 0

	// src/contracts/arc200_swap.algo.ts:303
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert

	// src/contracts/arc200_swap.algo.ts:305
	// sendOnlineKeyRegistration({
	// 			sender: this.app.address,
	// 			selectionPK: selection_pk,
	// 			stateProofPK: state_proof_pk,
	// 			votePK: vote_pk,
	// 			voteFirst: vote_first,
	// 			voteLast: vote_last,
	// 			voteKeyDilution: vote_key_dilution,
	// 			fee: 1000,
	// 		})
	itxn_begin
	int keyreg
	itxn_field TypeEnum

	// src/contracts/arc200_swap.algo.ts:306
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/arc200_swap.algo.ts:307
	// selectionPK: selection_pk
	frame_dig -1 // selection_pk: bytes
	itxn_field SelectionPK

	// src/contracts/arc200_swap.algo.ts:308
	// stateProofPK: state_proof_pk
	frame_dig -2 // state_proof_pk: bytes
	itxn_field StateProofPK

	// src/contracts/arc200_swap.algo.ts:309
	// votePK: vote_pk
	frame_dig -3 // vote_pk: bytes
	itxn_field VotePK

	// src/contracts/arc200_swap.algo.ts:310
	// voteFirst: vote_first
	frame_dig -4 // vote_first: uint64
	itxn_field VoteFirst

	// src/contracts/arc200_swap.algo.ts:311
	// voteLast: vote_last
	frame_dig -5 // vote_last: uint64
	itxn_field VoteLast

	// src/contracts/arc200_swap.algo.ts:312
	// voteKeyDilution: vote_key_dilution
	frame_dig -6 // vote_key_dilution: uint64
	itxn_field VoteKeyDilution

	// src/contracts/arc200_swap.algo.ts:313
	// fee: 1000
	int 1000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// register_offline()void
abi_route_register_offline:
	// execute register_offline()void
	callsub register_offline
	int 1
	return

// register_offline(): void
register_offline:
	proto 0 0

	// src/contracts/arc200_swap.algo.ts:318
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert

	// src/contracts/arc200_swap.algo.ts:320
	// sendOfflineKeyRegistration({
	// 			sender: this.app.address,
	// 			fee: 1000,
	// 		})
	itxn_begin
	int keyreg
	itxn_field TypeEnum

	// src/contracts/arc200_swap.algo.ts:321
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/arc200_swap.algo.ts:322
	// fee: 1000
	int 1000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// set_fees(uint64)void
abi_route_set_fees:
	// fee: uint64
	txna ApplicationArgs 1
	btoi

	// execute set_fees(uint64)void
	callsub set_fees
	int 1
	return

// set_fees(fee: uint64): void
set_fees:
	proto 1 0

	// src/contracts/arc200_swap.algo.ts:327
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert

	// src/contracts/arc200_swap.algo.ts:328
	// this.fee.value = fee
	byte 0x666565 // "fee"
	frame_dig -1 // fee: uint64
	app_global_put
	retsub

// set_admin(account)void
abi_route_set_admin:
	// admin: account
	txna ApplicationArgs 1
	btoi
	txnas Accounts

	// execute set_admin(account)void
	callsub set_admin
	int 1
	return

// set_admin(admin: Account): void
set_admin:
	proto 1 0

	// src/contracts/arc200_swap.algo.ts:332
	// assert(this.txn.sender === this.admin.value)
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert

	// src/contracts/arc200_swap.algo.ts:333
	// this.admin.value = admin
	byte 0x61646d696e // "admin"
	frame_dig -1 // admin: Account
	app_global_put
	retsub

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "mint(pay,uint64,asset)void"
	method "burn(axfer)void"
	method "swap_to_arc200(pay,uint64)uint64"
	method "swap_from_arc200(uint64,uint64)uint64"
	method "create_pool_token(pay)uint64"
	method "register_online(byte[],byte[],byte[],uint64,uint64,uint64)void"
	method "register_offline()void"
	method "set_fees(uint64)void"
	method "set_admin(account)void"
	txna ApplicationArgs 0
	match abi_route_mint abi_route_burn abi_route_swap_to_arc200 abi_route_swap_from_arc200 abi_route_create_pool_token abi_route_register_online abi_route_register_offline abi_route_set_fees abi_route_set_admin
	err

call_UpdateApplication:
	method "updateApplication()void"
	txna ApplicationArgs 0
	match abi_route_updateApplication
	err